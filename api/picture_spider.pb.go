// protoc --go_out=plugins=grpc:. picture_spider.proto
// protoc --grpc-gateway_out=logtostderr=true:. picture_spider.proto

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.11.4
// source: picture_spider.proto

package v1

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type PictureUrlRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type     string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Id       string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Manga    int64  `protobuf:"varint,3,opt,name=manga,proto3" json:"manga,omitempty"`
	Cache    bool   `protobuf:"varint,4,opt,name=cache,proto3" json:"cache,omitempty"`
	UploadSM bool   `protobuf:"varint,5,opt,name=uploadSM,proto3" json:"uploadSM,omitempty"`
}

func (x *PictureUrlRequest) Reset() {
	*x = PictureUrlRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_picture_spider_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PictureUrlRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PictureUrlRequest) ProtoMessage() {}

func (x *PictureUrlRequest) ProtoReflect() protoreflect.Message {
	mi := &file_picture_spider_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PictureUrlRequest.ProtoReflect.Descriptor instead.
func (*PictureUrlRequest) Descriptor() ([]byte, []int) {
	return file_picture_spider_proto_rawDescGZIP(), []int{0}
}

func (x *PictureUrlRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *PictureUrlRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PictureUrlRequest) GetManga() int64 {
	if x != nil {
		return x.Manga
	}
	return 0
}

func (x *PictureUrlRequest) GetCache() bool {
	if x != nil {
		return x.Cache
	}
	return false
}

func (x *PictureUrlRequest) GetUploadSM() bool {
	if x != nil {
		return x.UploadSM
	}
	return false
}

type PictureUrlData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OriginalUrl string `protobuf:"bytes,1,opt,name=originalUrl,proto3" json:"originalUrl,omitempty"`
	Referer     string `protobuf:"bytes,2,opt,name=referer,proto3" json:"referer,omitempty"`
	CacheUrl    string `protobuf:"bytes,3,opt,name=cacheUrl,proto3" json:"cacheUrl,omitempty"`
	SmUrl       string `protobuf:"bytes,4,opt,name=smUrl,proto3" json:"smUrl,omitempty"`
	IsR18       bool   `protobuf:"varint,5,opt,name=isR18,proto3" json:"isR18,omitempty"`
}

func (x *PictureUrlData) Reset() {
	*x = PictureUrlData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_picture_spider_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PictureUrlData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PictureUrlData) ProtoMessage() {}

func (x *PictureUrlData) ProtoReflect() protoreflect.Message {
	mi := &file_picture_spider_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PictureUrlData.ProtoReflect.Descriptor instead.
func (*PictureUrlData) Descriptor() ([]byte, []int) {
	return file_picture_spider_proto_rawDescGZIP(), []int{1}
}

func (x *PictureUrlData) GetOriginalUrl() string {
	if x != nil {
		return x.OriginalUrl
	}
	return ""
}

func (x *PictureUrlData) GetReferer() string {
	if x != nil {
		return x.Referer
	}
	return ""
}

func (x *PictureUrlData) GetCacheUrl() string {
	if x != nil {
		return x.CacheUrl
	}
	return ""
}

func (x *PictureUrlData) GetSmUrl() string {
	if x != nil {
		return x.SmUrl
	}
	return ""
}

func (x *PictureUrlData) GetIsR18() bool {
	if x != nil {
		return x.IsR18
	}
	return false
}

type PictureUrlResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32           `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string          `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *PictureUrlData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *PictureUrlResponse) Reset() {
	*x = PictureUrlResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_picture_spider_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PictureUrlResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PictureUrlResponse) ProtoMessage() {}

func (x *PictureUrlResponse) ProtoReflect() protoreflect.Message {
	mi := &file_picture_spider_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PictureUrlResponse.ProtoReflect.Descriptor instead.
func (*PictureUrlResponse) Descriptor() ([]byte, []int) {
	return file_picture_spider_proto_rawDescGZIP(), []int{2}
}

func (x *PictureUrlResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *PictureUrlResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *PictureUrlResponse) GetData() *PictureUrlData {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_picture_spider_proto protoreflect.FileDescriptor

var file_picture_spider_proto_rawDesc = []byte{
	0x0a, 0x14, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x73, 0x70, 0x69, 0x64, 0x65, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31,
	0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x7f,
	0x0a, 0x11, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x61, 0x6e, 0x67, 0x61,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6d, 0x61, 0x6e, 0x67, 0x61, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x61, 0x63, 0x68, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x63, 0x61,
	0x63, 0x68, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x4d, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x4d, 0x22,
	0x94, 0x01, 0x0a, 0x0e, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x55, 0x72, 0x6c, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x55, 0x72,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61,
	0x6c, 0x55, 0x72, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x72, 0x12, 0x1a,
	0x0a, 0x08, 0x63, 0x61, 0x63, 0x68, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x63, 0x61, 0x63, 0x68, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x6d,
	0x55, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x6d, 0x55, 0x72, 0x6c,
	0x12, 0x14, 0x0a, 0x05, 0x69, 0x73, 0x52, 0x31, 0x38, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x05, 0x69, 0x73, 0x52, 0x31, 0x38, 0x22, 0x68, 0x0a, 0x12, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72,
	0x65, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x73, 0x67, 0x12, 0x2c, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x69, 0x63, 0x74,
	0x75, 0x72, 0x65, 0x55, 0x72, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x32, 0x72, 0x0a, 0x0d, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x53, 0x70, 0x69, 0x64, 0x65,
	0x72, 0x12, 0x61, 0x0a, 0x0a, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x55, 0x72, 0x6c, 0x12,
	0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x69, 0x63, 0x74, 0x75,
	0x72, 0x65, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x55,
	0x72, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x18, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x12, 0x12, 0x10, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65,
	0x2d, 0x75, 0x72, 0x6c, 0x42, 0x04, 0x5a, 0x02, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_picture_spider_proto_rawDescOnce sync.Once
	file_picture_spider_proto_rawDescData = file_picture_spider_proto_rawDesc
)

func file_picture_spider_proto_rawDescGZIP() []byte {
	file_picture_spider_proto_rawDescOnce.Do(func() {
		file_picture_spider_proto_rawDescData = protoimpl.X.CompressGZIP(file_picture_spider_proto_rawDescData)
	})
	return file_picture_spider_proto_rawDescData
}

var file_picture_spider_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_picture_spider_proto_goTypes = []interface{}{
	(*PictureUrlRequest)(nil),  // 0: proto.v1.PictureUrlRequest
	(*PictureUrlData)(nil),     // 1: proto.v1.PictureUrlData
	(*PictureUrlResponse)(nil), // 2: proto.v1.PictureUrlResponse
}
var file_picture_spider_proto_depIdxs = []int32{
	1, // 0: proto.v1.PictureUrlResponse.data:type_name -> proto.v1.PictureUrlData
	0, // 1: proto.v1.PictureSpider.PictureUrl:input_type -> proto.v1.PictureUrlRequest
	2, // 2: proto.v1.PictureSpider.PictureUrl:output_type -> proto.v1.PictureUrlResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_picture_spider_proto_init() }
func file_picture_spider_proto_init() {
	if File_picture_spider_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_picture_spider_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PictureUrlRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_picture_spider_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PictureUrlData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_picture_spider_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PictureUrlResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_picture_spider_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_picture_spider_proto_goTypes,
		DependencyIndexes: file_picture_spider_proto_depIdxs,
		MessageInfos:      file_picture_spider_proto_msgTypes,
	}.Build()
	File_picture_spider_proto = out.File
	file_picture_spider_proto_rawDesc = nil
	file_picture_spider_proto_goTypes = nil
	file_picture_spider_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// PictureSpiderClient is the client API for PictureSpider service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PictureSpiderClient interface {
	PictureUrl(ctx context.Context, in *PictureUrlRequest, opts ...grpc.CallOption) (*PictureUrlResponse, error)
}

type pictureSpiderClient struct {
	cc grpc.ClientConnInterface
}

func NewPictureSpiderClient(cc grpc.ClientConnInterface) PictureSpiderClient {
	return &pictureSpiderClient{cc}
}

func (c *pictureSpiderClient) PictureUrl(ctx context.Context, in *PictureUrlRequest, opts ...grpc.CallOption) (*PictureUrlResponse, error) {
	out := new(PictureUrlResponse)
	err := c.cc.Invoke(ctx, "/proto.v1.PictureSpider/PictureUrl", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PictureSpiderServer is the server API for PictureSpider service.
type PictureSpiderServer interface {
	PictureUrl(context.Context, *PictureUrlRequest) (*PictureUrlResponse, error)
}

// UnimplementedPictureSpiderServer can be embedded to have forward compatible implementations.
type UnimplementedPictureSpiderServer struct {
}

func (*UnimplementedPictureSpiderServer) PictureUrl(context.Context, *PictureUrlRequest) (*PictureUrlResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PictureUrl not implemented")
}

func RegisterPictureSpiderServer(s *grpc.Server, srv PictureSpiderServer) {
	s.RegisterService(&_PictureSpider_serviceDesc, srv)
}

func _PictureSpider_PictureUrl_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PictureUrlRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PictureSpiderServer).PictureUrl(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.v1.PictureSpider/PictureUrl",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PictureSpiderServer).PictureUrl(ctx, req.(*PictureUrlRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _PictureSpider_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.v1.PictureSpider",
	HandlerType: (*PictureSpiderServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PictureUrl",
			Handler:    _PictureSpider_PictureUrl_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "picture_spider.proto",
}
